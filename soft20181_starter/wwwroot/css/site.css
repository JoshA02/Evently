@import url('https://fonts.googleapis.com/css2?family=Roboto+Flex:opsz,wght@8..144,100;8..144,200;8..144,300;8..144,400;8..144,500;8..144,600;8..144,700;8..144,800;8..144,900;8..144,1000&display=swap'); /* Write your CSS here*/

body {
    display: none; /* Hide the root element initially, before setting appearance preference */

    /* Light Mode Colours */
    --white-default: #FFFFFF;
    --accent-default: #1075D9;
    --background-default: #F8F8F8;
    --background-hover-default: #F0F0F0;
    --text-default: #272727;
    --text-light-default: #3C3C3C;
    --text-tooltip-default: #636363;
    --outline-default: #d9d9d9;
    --shadow-default: rgba(0,0,0,0.16);

    /* Dark Mode Colours */
    --white-dark: #272727;
    --accent-dark: #1075D9;
    --background-dark: #272727;
    --background-hover-dark: #1F1F1F;
    --text-dark: #FFFFFF;
    --text-light-dark: #FFFFFF;
    /*--text-tooltip-dark: #FFFFFF;*/
    --text-tooltip-dark: #b4b4b4;
    --outline-dark: #636363;
    --shadow-dark: rgba(0,0,0,0.16);

    /* Splitting up this way allows use of light-mode colours in dark mode (in circumstances where it makes sense) */

    /* Used Variables */
    --white: var(--white-default);
    --accent: var(--accent-default);
    --accent-hover: #0F6AC0;
    --banner: #043F7A;
    --background: var(--background-default);
    --background-hover: var(--background-hover-default);
    --text: var(--text-default);
    --text-light: var(--text-light-default);
    --text-tooltip: var(--text-tooltip-default);
    --outline: var(--outline-default);
    --shadow: var(--shadow-default);
    --urgent: #CE3B3B;
    --warning: #CE843B;
    --input-invalid: #ce3b3b44;

    font-family: 'Roboto Flex', sans-serif;
    background-color: var(--background);

    /* Default Font Sizes */
    --font-size-title: 2.2em;
    --font-size-heading: 1.5em;
    --font-size-subheading: 1em; /* around 16px */
    --font-size-body: 0.875em; /* around 14px */
    --font-size-tooltip: 0.75em;
    --font-size-input: 0.8em;

    /* Default Font Weights */
    --font-weight-title: bold;
    --font-weight-heading: bold;
    --font-weight-subheading: 600; /* semi-bold */
    --font-weight-body: 500; /* normal */
    --font-weight-tooltip: 600; /* semi-bold */
    --font-weight-input: 500; /* normal */
}
body.dark {
    --white: var(--white-dark);
    --accent: var(--accent-dark);
    --background: var(--background-dark);
    --background-hover: var(--background-hover-dark);
    --text: var(--text-dark);
    --text-light: var(--text-light-dark);
    --text-tooltip: var(--text-tooltip-dark);
    --outline: var(--outline-dark);
    --shadow: var(--shadow-dark);
}
body.small {
    font-size: 0.8em;
}
body.medium {
    font-size: 1em; /* Default */
}
body.large {
    font-size: 1.4em;
}
body.font-1{
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}
body.font-2{
    font-family: 'Times New Roman', Times, serif;
}

.text-danger {
    color: var(--urgent);
}

h1, h2, h3, h4, h5, h6 {
    color: var(--text);
}
h1 {
    font-size: var(--font-size-title);
    font-weight: var(--font-weight-title);
}
h2 {
    font-size: var(--font-size-heading);
    font-weight: var(--font-weight-heading);
}
h3 {
    font-size: var(--font-size-subheading);
    font-weight: var(--font-weight-subheading);
}
p {
    color: var(--text-light);
    /* font-size: var(--font-size-subheading);
    font-weight: var(--font-weight-subheading); */
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-body);
}
span {
    color: var(--text-light);
    font-size: var(--font-size-tooltip);
    font-weight: var(--font-weight-tooltip);
}
label {
    color: var(--text);
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-tooltip);
    margin: 0;
    margin-bottom: 6px;
}
input, textarea {
    font-size: var(--font-size-input);
    font-weight: var(--font-weight-input);
    border-radius: 4px;
    height: 26px;
    border: 1px solid var(--outline);
    background-color: var(--white);
    padding: 0 6px;
    margin: 0;
}
textarea {
    padding-top: 0.4em;
    font-family: 'Roboto Flex', sans-serif;
}



.material-symbols-outlined {
    user-select: none;
    font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 24
}
.material-symbols-outlined.sml {
    font-size: var(--font-size-subheading);
    color: var(--text);
}

body {
    margin: 0;
}

.main-container {
    /* margin: 10px 20%; */
    margin: 10px 12%;
    display: flex;
    flex-direction: column;
    padding-bottom: 16px;
    min-height: 100vh;
}



@keyframes loading {
    0% {
        opacity: 0.8;
    }
    50% {
        opacity: 0.6;
    }
    100% {
        opacity: 0.8;
    }

}
@keyframes zoom-in {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(1.2);
    }
}

#prev-page-btn.disabled, #next-page-btn.disabled {
    opacity: 0.2;
}

.divider, .divider.horizontal {
    margin: 10px 0;
    border-top: 1px solid var(--outline);
}
.divider.vertical {
    margin: 0 10px;
    border-left: 1px solid var(--outline);
}
.divider.faded {
    opacity: 0.5;
}

.bottom-fade {
    width: 100%;
    height: 160px;
    position: fixed;
    bottom: 0;
    left: 0;
    background: linear-gradient(transparent, var(--background));
}

button:disabled {
    opacity: 0.4;
    pointer-events: none;
}
button.fake-disabled {
    opacity: 0.4;
    cursor: not-allowed!important;
}
.g-recaptcha.disabled {
    opacity: 0.4;
    pointer-events: none;
}

select {
    font-size: var(--font-size-input);
    font-weight: var(--font-weight-input);
    border-radius: 4px;
    height: 26px;
    border: 1px solid var(--outline);
    background-color: var(--white);
    padding: 0 6px;
    margin: 0;
    color: var(--text);
}

@media screen and (max-width: 350px) {
    .g-recaptcha {
        /* Stops the entire page from being scaled down on smaller displays */
        transform: scale(0.81);
        transform-origin: 0 0;
    }
}

/* For loading spinner. Used for contact page and event-detail */
.loader {
    display: none;
    padding: 20% 0;
    align-self: center;
    align-items: center;
    flex-direction: column;
}
.loader > img {
    width: 35%;
}
.loader > span {
    cursor: pointer;
}

.form-input {
    display: flex;
    flex-direction: column;
}
.form-input.hoz {
    flex-direction: row;
    align-items: center;
}
.form-input.hoz > label {
    margin-right: 10px;
    margin-bottom: 0;
}
/* .form-input > input, .form-input > input:empty {
  border: 1px solid var(--outline);
} */
.form-input > input:invalid {
    border: 1px solid var(--input-invalid);
}

input {
    color: var(--text);
}

.captcha-warning {
    color: var(--urgent);
    display: none;
}

.test {
    background-color: blue;
}

@media screen and (max-width: 1000px) {
    .test {
        background-color: red;
    }
}